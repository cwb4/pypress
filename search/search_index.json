{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. resources.md # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. resources.md # Other markdown pages, images and other files.","title":"Project layout"},{"location":"resources/","text":"Resources \u00b6 Blogs & Stack Overflow \u00b6 Data Structure \u00b6 List Recursively modifying the elements in a deeply nested list - Stack Overflow Flatten a deeply nested list Dictionary Python Dictionaries - Jeff Knupp Using defaultdict for missing key handling in dictionary Control Structure \u00b6 Loop Avoid nested for loops - Stack Overflow Function \u00b6 Write Better Python Functions - Jeff Knupp Discussion on closure - Stack Overflow Decorators \u00b6 Primer on Python Decorators - Real Python Decorator Basics - Stack Overflow Writing Idiomatic Decorators with Metaclasses - Stack Overflow Memoization with decorators The Ultimate Guide to Python Decorators, Part I: Function Registration -Miguel Grinberg The Ultimate Guide to Python Decorators, Part II: Altering Function Behavior -Miguel Grinberg The Ultimate Guide to Python Decorators, Part III: Decorators with Arguments -Miguel Grinberg Iterators \u00b6 Generator Generators Request library Oop \u00b6 Python Classes and Object Oriented Programming - Jeff Knupp Object-Oriented Programming (OOP) in Python 3 Supercharge Your Classes With Python super() Inheritance and Composition: A Python OOP Guide Why use @classmethod decorator How python @property decorator works Discussions on Dataclass - Stack Overflow The definitive guide on how to use static, class or abstract methods in Python - Julien Danjou Python Descriptors: An Introduction -Real Python Operator and Function Overloading in Custom Python Classes - Real Python Python Class Mixin Interfaces in Python - Real Python FP \u00b6 Monads in Python Databases \u00b6 MySQL Connection with Pooling in Python Reusable Class for MySql Connection with Pooling in Python Web \u00b6 Exploring HTTPS With Python - Real Python Async \u00b6 Async IO in Python: A Complete Walkthrough - Real Python Patterns \u00b6 Python Patterns - Brandon Rhodes Design Patterns Examples The Most Diabolical Python Antipattern - Real Python Internals \u00b6 Understanding Python's Execution Model - Jeff Knupp Misc \u00b6 With Statement & Context Managers - Jeff Knupp Python Command Line Arguments - Real Python Quirks \u00b6 The seemingly weird behavior of python's import Traps for the Unwary in Python\u2019s Import System - Nick Coghlan's Python Notes Books \u00b6 Python Tricks - Dan Bader Grokking Algorithms - Aditya Bhargava Talks \u00b6 How documentation works - Daniele Procida Abstract Base Classes: A smart use of metaclasses - Leonardo Giordani Dataclasses: The code generator to end all code generators - Raymond Hettinger Life Is Better Painted Black, or: How to Stop Worrying and Embrace Auto-Formatting - \u0141ukasz Langa Encapsulation with descriptors - Luciano Ramalho Facts and Myths About Python Names and Values - Ned Batchelder The Dictionary Even Mightier - Brandon Rhodes Practical Decorators - Reuven M. Lerner The Black Magic of Python Wheels - Elana Hashman Things I Wish They Told Me About The Multiprocessing Module in Python 3 - Pamela McANulty Piecing it Together A beginner's guide to application configuration - Mary Nagle Pythons in A Container - Lessons Learned Dockerizing Python Micro-Services - Dorian Pula Asynchronous Python for the Complete Beginner - Miguel Grinberg Python Testing 101 with Pytest - Matt Layman Python testing 201 with Pytest - Matt Layman Getting started with testing using Pytest and Mock - Gabe Hollombe All Your Ducks In A Row: Data Structures in the Std Lib and Beyond - Brandon Rhodes A Bit about Bytes: Understanding Python Bytecode - James Bennett Inside the Cheeseshop: How Python Packaging Works - Dustin Ingram Python Kubernetes - Kelsey Hightower Python's Class Development Toolkit - Raymond Hettinger","title":"Resources"},{"location":"resources/#resources","text":"","title":"Resources"},{"location":"resources/#blogs-stack-overflow","text":"","title":"Blogs &amp; Stack Overflow"},{"location":"resources/#data-structure","text":"List Recursively modifying the elements in a deeply nested list - Stack Overflow Flatten a deeply nested list Dictionary Python Dictionaries - Jeff Knupp Using defaultdict for missing key handling in dictionary","title":"Data Structure"},{"location":"resources/#control-structure","text":"Loop Avoid nested for loops - Stack Overflow","title":"Control Structure"},{"location":"resources/#function","text":"Write Better Python Functions - Jeff Knupp Discussion on closure - Stack Overflow","title":"Function"},{"location":"resources/#decorators","text":"Primer on Python Decorators - Real Python Decorator Basics - Stack Overflow Writing Idiomatic Decorators with Metaclasses - Stack Overflow Memoization with decorators The Ultimate Guide to Python Decorators, Part I: Function Registration -Miguel Grinberg The Ultimate Guide to Python Decorators, Part II: Altering Function Behavior -Miguel Grinberg The Ultimate Guide to Python Decorators, Part III: Decorators with Arguments -Miguel Grinberg","title":"Decorators"},{"location":"resources/#iterators","text":"Generator Generators Request library","title":"Iterators"},{"location":"resources/#oop","text":"Python Classes and Object Oriented Programming - Jeff Knupp Object-Oriented Programming (OOP) in Python 3 Supercharge Your Classes With Python super() Inheritance and Composition: A Python OOP Guide Why use @classmethod decorator How python @property decorator works Discussions on Dataclass - Stack Overflow The definitive guide on how to use static, class or abstract methods in Python - Julien Danjou Python Descriptors: An Introduction -Real Python Operator and Function Overloading in Custom Python Classes - Real Python Python Class Mixin Interfaces in Python - Real Python","title":"Oop"},{"location":"resources/#fp","text":"Monads in Python","title":"FP"},{"location":"resources/#databases","text":"MySQL Connection with Pooling in Python Reusable Class for MySql Connection with Pooling in Python","title":"Databases"},{"location":"resources/#web","text":"Exploring HTTPS With Python - Real Python","title":"Web"},{"location":"resources/#async","text":"Async IO in Python: A Complete Walkthrough - Real Python","title":"Async"},{"location":"resources/#patterns","text":"Python Patterns - Brandon Rhodes Design Patterns Examples The Most Diabolical Python Antipattern - Real Python","title":"Patterns"},{"location":"resources/#internals","text":"Understanding Python's Execution Model - Jeff Knupp","title":"Internals"},{"location":"resources/#misc","text":"With Statement & Context Managers - Jeff Knupp Python Command Line Arguments - Real Python","title":"Misc"},{"location":"resources/#quirks","text":"The seemingly weird behavior of python's import Traps for the Unwary in Python\u2019s Import System - Nick Coghlan's Python Notes","title":"Quirks"},{"location":"resources/#books","text":"Python Tricks - Dan Bader Grokking Algorithms - Aditya Bhargava","title":"Books"},{"location":"resources/#talks","text":"How documentation works - Daniele Procida Abstract Base Classes: A smart use of metaclasses - Leonardo Giordani Dataclasses: The code generator to end all code generators - Raymond Hettinger Life Is Better Painted Black, or: How to Stop Worrying and Embrace Auto-Formatting - \u0141ukasz Langa Encapsulation with descriptors - Luciano Ramalho Facts and Myths About Python Names and Values - Ned Batchelder The Dictionary Even Mightier - Brandon Rhodes Practical Decorators - Reuven M. Lerner The Black Magic of Python Wheels - Elana Hashman Things I Wish They Told Me About The Multiprocessing Module in Python 3 - Pamela McANulty Piecing it Together A beginner's guide to application configuration - Mary Nagle Pythons in A Container - Lessons Learned Dockerizing Python Micro-Services - Dorian Pula Asynchronous Python for the Complete Beginner - Miguel Grinberg Python Testing 101 with Pytest - Matt Layman Python testing 201 with Pytest - Matt Layman Getting started with testing using Pytest and Mock - Gabe Hollombe All Your Ducks In A Row: Data Structures in the Std Lib and Beyond - Brandon Rhodes A Bit about Bytes: Understanding Python Bytecode - James Bennett Inside the Cheeseshop: How Python Packaging Works - Dustin Ingram Python Kubernetes - Kelsey Hightower Python's Class Development Toolkit - Raymond Hettinger","title":"Talks"}]}